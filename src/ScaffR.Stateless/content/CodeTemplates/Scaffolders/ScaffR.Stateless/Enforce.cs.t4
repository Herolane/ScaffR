<#@ Template Language="C#" HostSpecific="True" Inherits="DynamicTransform" #>
<#@ Output Extension="cs" #>
namespace <#= Model.Namespace #>.Stateless
{
    using System;

    /// <summary>
    /// The enforce.
    /// </summary>
    internal static class Enforce
    {
        #region Public Methods and Operators

        /// <summary>
        /// The argument not null.
        /// </summary>
        /// <param name="argument">
        /// The argument.
        /// </param>
        /// <param name="description">
        /// The description.
        /// </param>
        /// <typeparam name="T">
        /// </typeparam>
        /// <returns>
        /// The T.
        /// </returns>
        /// <exception cref="ArgumentNullException">
        /// </exception>
        public static T ArgumentNotNull<T>(T argument, string description) where T : class
        {
            if (argument == null)
            {
                throw new ArgumentNullException(description);
            }

            return argument;
        }

        #endregion
    }
}